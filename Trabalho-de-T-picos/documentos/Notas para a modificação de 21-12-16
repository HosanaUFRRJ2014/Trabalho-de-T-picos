Novas funções criadas: 

*Em "lista.h": 

-void removePeca(LISTA_LIGADA *lista,NO *aRemover,PONTO_CANDIDATO *ponto_aRemoverP1,PONTO_CANDIDATO *ponto_aRemoverP2); 
-int removerPecaDadoPeca(LISTA_LIGADA *B, PECA *aRemover, PONTO_CANDIDATO *p1,PONTO_CANDIDATO *p2). 

*Em "R.h": 

-void despreencherR(R* r,PECA *aRemover,PONTO_CANDIDATO *p1,PONTO_CANDIDATO *p2); 
-void remocaoAleatoria(R *r, LISTA_LIGADA *P, LISTA_LIGADA *B, float gamma); 
-void deslocarPecas(R *r, LISTA_LIGADA *B);
-void imprimirVariaveisR(R *r).


Observações: 

+Alterações feitas na struct "R"(adição de duas variáveis: "quantidade","valorUtilidadeTotal" e “areaOcupada”(foi comentada)) e em funções que manipulam R de forma que o valor destas variáveis possam mudar; 

+Modificação da lógica da função "adicionarPecaAoRetangulo" em dar prioridade de fato de inserção de uma peça ao primeiro ponto p1(direita e cima) factível. Anteriormente não estava fazendo jus ao que era esperado; 

+Modificação da função “preencherRcomPeca” com adição do parâmetro “indicePeca” para preencher uma peça dado um índice válido.

*Em "arrayPontosCandidatos.h": 

-void removePontoCandidato(ARRAY_PONTOS_CANDIDATOS *arrayP1,ARRAY_PONTOS_CANDIDATOS *arrayP2,NO_Pt *aRemoverP1, NO_Pt *aRemoverP2); 
-int removerPontoCandidatoDadoPontoCandidato(ARRAY_PONTOS_CANDIDATOS *arrayP1,ARRAY_PONTOS_CANDIDATOS *arrayP2,PONTO_CANDIDATO *pontoP1,PONTO_CANDIDATO *pontoP2). 

*Em "ponto.h": 

-double distanciaEntreDoisPontos(int x1, int y1, int x2, int y2); 

*Em "peca.h": 

-void copiarPecaParaP(PECA *pecaDestino, PECA *pecaOrigem); 
-PONTO_CANDIDATO* coordenadaOrigemPeca(PECA *peca, PONTO_CANDIDATO *p1, PONTO_CANDIDATO *p2); 
-PONTO_CANDIDATO* coordenadaOrigemOpostaPeca(PECA *peca, PONTO_CANDIDATO *p1, PONTO_CANDIDATO *p2); 
-void definirPontoCandidato(PONTO_CANDIDATO *ondeInseriuP1,PONTO_CANDIDATO *ondeInseriuP2,PECA *pecaInserida,PONTO_CANDIDATO *destinoP1,PONTO_CANDIDATO *destinoP2) (foi comentada); 
-void mergeSort(PECA *vetor, int posicaoInicio, int posicaoFim).

*Em "heuristicas.h": 

-R* trocarSolucao(R *nova, LISTA_LIGADA *P, LISTA_LIGADA *B, double gamma). 

Observações: 

+Ajustes de funções e variáveis na função "Simulated_Annealing" de acordo com as alterações feitas.
